# -- (string) Override the namespace for all resources.
# @section -- Parameters
namespaceOverride: ""

# -- (string) Override the component label for all resources.
# @section -- Parameters
componentOverride: ""

# -- (string) Override the partOf label for all resources.
# @section -- Parameters
partOfOverride: ""

# -- (string) Application name.
# @default -- `{{ .Chart.Name }}`
# @section -- Parameters
applicationName: ""

cronJob:
  # -- (bool) Deploy CronJob resources.
  # @section -- CronJob Parameters
  enabled: false
  # -- (object) Map of CronJob resources.
  # Key will be used as a name suffix for the CronJob. Value is the CronJob configuration.
  # See values for more details.
  # @section -- CronJob Parameters
  jobs:
    # db-migration:
    #   schedule: "* * * 8 *"
    #   priorityClassName: high-priority
    #   env:
    #     KEY:
    #       value: VALUE
    #   image:
    #     repository: docker.io/nginx
    #     tag: v1.0.0
    #     digest: '' # if set to a non empty value, digest takes precedence on the tag
    #     imagePullPolicy: IfNotPresent
    #   command: ["/bin/bash"]
    #   args: ["-c","sleep 5000"]
    #   resources:
    #     requests:
    #         memory: 5Gi
    #         cpu: 1
    #   dnsConfig:
    #     options:
    #     - name: ndots
    #       value: '1'
    #   dnsPolicy: ClusterFirst

deployment:
  # -- (bool) Enable Deployment.
  # @section -- Deployment Parameters
  enabled: true
  # -- (object) Additional labels for Deployment.
  # @section -- Deployment Parameters
  additionalLabels:
  # -- (object) Additional pod labels which are used in Service's Label Selector.
  # @section -- Deployment Parameters
  podLabels:
  # -- (object) Annotations for Deployment.
  # @section -- Deployment Parameters
  annotations:
  # -- (object) Additional pod annotations.
  # @section -- Deployment Parameters
  additionalPodAnnotations:
  strategy:
    # -- (string) Type of deployment strategy.
    # @section -- Deployment Parameters
    type: RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 25%
    #   maxSurge: 25%
  # -- (bool) Reload deployment if attached Secret/ConfigMap changes.
  # @section -- Deployment Parameters
  reloadOnChange: true
  # -- (object) Select the node where the pods should be scheduled.
  # @section -- Deployment Parameters
  nodeSelector:
  # -- (list) Add host aliases to the pods.
  # @section -- Deployment Parameters
  hostAliases:
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  # - ip: "10.1.2.3"
  #   hostnames:
  #   - "foo.remote"
  #   - "bar.remote"
  # -- (object) Add init containers to the pods.
  # @section -- Deployment Parameters
  initContainers:
    # init-something:
    #   image: busybox
    #   imagePullPolicy: IfNotPresent
    #   command: ['/bin/sh']
  # -- (int) Number of replicas.
  # @section -- Deployment Parameters
  replicas:
  # -- (list) List of secrets to be used for pulling the images.
  # @section -- Deployment Parameters
  imagePullSecrets: []
  #  - name: docker-pull
  # -- (object) Mount environment variables from ConfigMap or Secret to the pod.
  # @section -- Deployment Parameters
  envFrom:
  #  production-cm:
  #    type: configmap
  #    nameSuffix: my-configmap
  #  logging-config:
  #    type: configmap
  #    nameSuffix: your-configmap
  #  postgres-config:
  #    type: secret
  #    nameSuffix: postgres
  # -- (object) Environment variables to be added to the pod.
  # @section -- Deployment Parameters
  env:
  #  ENVIRONMENT:
  #     value: "dev"
  #  FREQUENCY:
  #     valueFrom:
  #        configMapKeyRef:
  #           name: config
  #           key: frequency
  # -- (object) Volumes to be added to the pod.
  # Key is the name of the volume. Value is the volume definition.
  # @section -- Deployment Parameters
  volumes:
    # configmap-volume:
    #   configMap:
    #     name: '{{ template "application.name" . }}-configmap-nameSuffix'
    # secret-volume:
    #   secret:
    #     secretName: secret-name
    # persistent-volume-name:
    #   persistentVolumeClaim:
    #     claimName: claim-name
  # -- (object) Mount path for Volumes.
  # Key is the name of the volume. Value is the volume mount definition.
  # @section -- Deployment Parameters
  volumeMounts:
    # volume-name:
    #    mountPath: path
    #    subPath: szy
    # volume-name-2:
    #    mountPath: path-2
  # -- (string) Define the priority class for the pod.
  # @section -- Deployment Parameters
  priorityClassName: ""
  # -- (list) Taint tolerations for the pods.
  # @section -- Deployment Parameters
  tolerations:
    # - key: "dedicated"
    #   operator: "Equal"
    #   value: "app"
    #   effect: "NoSchedule"
  # -- (object) Affinity for the pods.
  # @section -- Deployment Parameters
  affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: disktype
  #          operator: In
  #          values:
  #          - ssd
  # -- (list) Topology spread constraints for the pods.
  # @section -- Deployment Parameters
  topologySpreadConstraints:
    # - maxSkew: 1
    #   topologyKey: kubernetes.io/hostname
    #   whenUnsatisfiable: ScheduleAnyway
    #   labelSelector:
    #     matchExpressions:
    #     - key: disktype
    #       operator: In
    #       values:
    #       - ssd
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: ScheduleAnyway
    #   labelSelector:
    #     matchExpressions:
    #     - key: disktype
    #       operator: In
    #       values:
    #       - ssd
  # -- (int) Number of ReplicaSet revisions to retain.
  # @section -- Deployment Parameters
  revisionHistoryLimit: 2
  image:
    # -- (string) Repository.
    # @section -- Deployment Parameters
    repository: ""
    # -- (string) Tag.
    # @section -- Deployment Parameters
    tag: ""
    # -- (string) Image digest. If set to a non-empty value, digest takes precedence on the tag.
    # @section -- Deployment Parameters
    digest: ""
    # -- (string) Image pull policy.
    # @section -- Deployment Parameters
    pullPolicy: IfNotPresent
  # -- (object) DNS config for the pods.
  # @section -- Deployment Parameters
  dnsConfig:
    # options:
    # - name: ndots
    #   value: '1'
  # -- (string) DNS Policy.
  # @section -- Deployment Parameters
  dnsPolicy: ""
  # -- (object) Startup probe.
  # @default -- See below
  # Must specify either one of the following field when enabled: httpGet, exec, tcpSocket, grpc
  # @section -- Deployment Parameters
  startupProbe:
    # -- (bool) Enable Startup probe.
    # @section -- Deployment Parameters
    enabled: false
    # -- (int) Number of retries before marking the pod as failed.
    # @section -- Deployment Parameters
    failureThreshold: 30
    # -- (int) Time between retries.
    # @section -- Deployment Parameters
    periodSeconds: 10
    # -- (int) Number of successful probes before marking the pod as ready.
    # @section -- Deployment Parameters
    successThreshold: 1
    # -- (int) Time before the probe times out.
    # @section -- Deployment Parameters
    timeoutSeconds: 1
    # -- (object) HTTP Get probe.
    # @section -- Deployment Parameters
    httpGet: {}
    # -- (object) Exec probe.
    # @section -- Deployment Parameters
    exec: {}
    # -- (object) TCP Socket probe.
    # @section -- Deployment Parameters
    tcpSocket: {}
    # -- (object) gRPC probe.
    # @section -- Deployment Parameters
    grpc: {}

  # -- (object) Readiness probe.
  # @default -- See below
  # Must specify either one of the following field when enabled: httpGet, exec, tcpSocket, grpc
  # @section -- Deployment Parameters
  readinessProbe:
    # -- (bool) Enable Readiness probe.
    # @section -- Deployment Parameters
    enabled: false
    # -- (int) Number of retries before marking the pod as failed.
    # @section -- Deployment Parameters
    failureThreshold: 30
    # -- (int) Time between retries.
    # @section -- Deployment Parameters
    periodSeconds: 10
    # -- (int) Number of successful probes before marking the pod as ready.
    # @section -- Deployment Parameters
    successThreshold: 1
    # -- (int) Time before the probe times out.
    # @section -- Deployment Parameters
    timeoutSeconds: 1
    # -- (object) HTTP Get probe.
    # @section -- Deployment Parameters
    httpGet: {}
    # -- (object) Exec probe.
    # @section -- Deployment Parameters
    exec: {}
    # -- (object) TCP Socket probe.
    # @section -- Deployment Parameters
    tcpSocket: {}
    # -- (object) gRPC probe.
    # @section -- Deployment Parameters
    grpc: {}

  # -- (object) Liveness probe.
  # @default -- See below
  # Must specify either one of the following field when enabled: httpGet, exec, tcpSocket, grpc
  # @section -- Deployment Parameters
  livenessProbe:
    # -- (bool) Enable Liveness probe.
    # @section -- Deployment Parameters
    enabled: false
    # -- (int) Number of retries before marking the pod as failed.
    # @section -- Deployment Parameters
    failureThreshold: 30
    # -- (int) Time between retries.
    # @section -- Deployment Parameters
    periodSeconds: 10
    # -- (int) Number of successful probes before marking the pod as ready.
    # @section -- Deployment Parameters
    successThreshold: 1
    # -- (int) Time before the probe times out.
    # @section -- Deployment Parameters
    timeoutSeconds: 1
    # -- (object) HTTP Get probe.
    # @section -- Deployment Parameters
    httpGet: {}
    # -- (object) Exec probe.
    # @section -- Deployment Parameters
    exec: {}
    # -- (object) TCP Socket probe.
    # @section -- Deployment Parameters
    tcpSocket: {}
    # -- (object) gRPC probe.
    # @section -- Deployment Parameters
    grpc: {}
  # -- (object) Resource limits and requests for the pod.
  # @section -- Deployment Parameters
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1
  # -- (object) Security Context at Container Level.
  # @section -- Deployment Parameters
  containerSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  # -- (object) Security Context for the pod.
  # @section -- Deployment Parameters
  securityContext:
    # fsGroup: 2000
  # -- (list) Command for the app container.
  # @section -- Deployment Parameters
  command: []
  # -- (list) Args for the app container.
  # @section -- Deployment Parameters
  args: []
  # -- (list) List of ports for the app container.
  # @section -- Deployment Parameters
  ports:
  # - containerPort: 8080
  #   name: http
  #   protocol: TCP
  # - containerPort: 8443
  #   name: https
  #   protocol: TCP
  # -- (int) Gracefull termination period.
  # @section -- Deployment Parameters
  terminationGracePeriodSeconds:
  # -- (object) Lifecycle configuration for the pod.
  # @section -- Deployment Parameters
  lifecycle: {}
    # preStop:
    #   exec:
    #     command: ["/bin/bash", "-c", "sleep 20"]
  # -- (list) Additional containers besides init and app containers (without templating).
  # @section -- Deployment Parameters
  additionalContainers:
  # - name: sidecar-container
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']

persistence:
  # -- (bool) Enable persistence.
  # @section -- Deployment Parameters
  enabled: false
  # -- (bool) Whether to mount the created PVC to the deployment.
  # @section -- Deployment Parameters
  mountPVC: false
  # -- (string) If `persistence.mountPVC` is enabled, where to mount the volume in the containers.
  # @section -- Deployment Parameters
  mountPath: "/"
  # -- (string) Name of the PVC.
  # @default -- `{{ include "application.name" $ }}-data`
  # @section -- Deployment Parameters
  name: ""
  # -- (string) Access mode for volume.
  # @section -- Deployment Parameters
  accessMode: ReadWriteOnce
  # -- (string) Storage class for volume.
  # If defined, use that value
  # If set to "-" or "", disable dynamic provisioning
  # If undefined or set to null (the default), no storageClass spec is
  #   set, choosing the default provisioner.
  # @section -- Deployment Parameters
  storageClass: null
  # -- (object) Additional labels for persistent volume.
  # @section -- Deployment Parameters
  additionalLabels:
    # key: value
  # -- (object) Annotations for persistent volume.
  # @section -- Deployment Parameters
  annotations:
    # "helm.sh/resource-policy": keep
  # -- (string) Size of the persistent volume.
  # @section -- Deployment Parameters
  storageSize: 8Gi
  # -- (string) PVC Volume Mode.
  # @section -- Deployment Parameters
  volumeMode: ""
  # -- (string) Name of the volume.
  # @section -- Deployment Parameters
  volumeName: ""

service:
  # -- (bool) Enable Service.
  # @section -- Service Parameters
  enabled: true
  # -- (object) Additional labels for service.
  # @section -- Service Parameters
  additionalLabels:
  # -- (object) Annotations for service.
  # @section -- Service Parameters
  annotations:
    # config.xposer.stakater.com/Domain: stakater.com
    # config.xposer.stakater.com/IngressNameTemplate: '{{ "{{.Service}}-{{.Namespace}}" }}'
    # config.xposer.stakater.com/IngressURLPath: /
    # config.xposer.stakater.com/IngressURLTemplate: '{{ "{{.Service}}.{{.Namespace}}.{{.Domain}}" }}'
    # service.alpha.openshift.io/serving-cert-secret-name: |
    #   '{{ template "application.name" . }}-tls'
    # xposer.stakater.com/annotations: |-
    #   kubernetes.io/ingress.class: external-ingress
    #   ingress.kubernetes.io/rewrite-target: /
    #   ingress.kubernetes.io/force-ssl-redirect: true
  # -- (list) Ports for applications service.
  # @section -- Service Parameters
  ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: 8080
  # -- (string) Type of service.
  # @section -- Service Parameters
  type: ClusterIP
  # -- (string) Fixed IP for a ClusterIP service.
  # Set to `None` for an headless service
  # @section -- Service Parameters
  clusterIP:

httproute:
  # -- (bool) Enable HTTPRoute.
  # @section -- HTTPRoute Parameters
  enabled: false
  # -- (object) Additional labels for HTTPRoute.
  # @section -- HTTPRoute Parameters
  additionalLabels:
  # -- (object) Annotations for HTTPRoute.
  # @section -- HTTPRoute Parameters
  annotations:
  # -- (object) parentRefs for HTTPRoute
  # @section -- HTTPRoute Parameters
  parentRefs:
  # -- (object) hostnames for HTTPRoute
  # @section -- HTTPRoute Parameters
  hostnames:
  # -- (object) rules for HTTPRoute
  #  @section -- HTTPRoute Parameters
  rules:

secretProviderClass:
  # -- (bool) Deploy a [Secrets Store CSI Driver SecretProviderClass](https://secrets-store-csi-driver.sigs.k8s.io/) resource.
  # @section -- SecretProviderClass Parameters
  enabled: false
  # -- (string) Name of the SecretProviderClass.
  # Required if `secretProviderClass.enabled` is set to `true`.
  # @section -- SecretProviderClass Parameters
  name: ""
  # -- (string) Name of the provider.
  # Required if `secretProviderClass.enabled` is set to `true`.
  # @section -- SecretProviderClass Parameters
  provider: ""
  # provider: vault
  # -- (string) Vault Address.
  # Required if `secretProviderClass.provider` is set to `vault`.
  # @section -- SecretProviderClass Parameters
  vaultAddress: ""
  # vaultAddress: http://vault:8200
  # -- (tpl/string) Vault Role Name.
  # Required if `secretProviderClass.provider` is set to `vault`.
  # @section -- SecretProviderClass Parameters
  roleName: ""
  # roleName: example-role
  # -- (list) Objects definitions.
  # @section -- SecretProviderClass Parameters
  objects:
    # - objectName: MONGO_HOST
    #   secretPath: testing/data/mongoDb
    #   secretKey: MONGO_HOST
  # -- (list) Objects mapping.
  # @section -- SecretProviderClass Parameters
  secretObjects:
    # - data:
    #   - key: MONGO_HOST
    #     objectName: host
    #   secretName: secret-mongo-host
    #   type: Opaque

serviceMonitor:
  # -- (bool) Deploy a ServiceMonitor (Prometheus Operator) resource.
  # @section -- ServiceMonitor Parameters
  enabled: false
  # -- (object) Additional labels for ServiceMonitor.
  # @section -- ServiceMonitor Parameters
  additionalLabels:
    # key: value
  # -- (object) Annotations for ServiceMonitor.
  # @section -- ServiceMonitor Parameters
  annotations:
    # key: value
  # -- (list) Service endpoints from which prometheus will scrape data.
  # @section -- ServiceMonitor Parameters
  endpoints:
  - interval: 5s
    path: /actuator/prometheus
    port: http

autoscaling:
  # -- (bool) Enable Horizontal Pod Autoscaling.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  enabled: false
  # -- (object) Additional labels for HPA.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  additionalLabels:
    # key: value
  # -- (object) Annotations for HPA.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  annotations:
    # key: value
  # -- (int) Minimum number of replicas.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  minReplicas: 1
  # -- (int) Maximum number of replicas.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  maxReplicas: 10
  # -- (list) Metrics used for autoscaling.
  # @section -- Autoscaling - Horizontal Pod Autoscaling Parameters
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
         type: Utilization
         averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
         type: Utilization
         averageUtilization: 60

certificate:
  # -- (bool) Deploy a [cert-manager Certificate](https://cert-manager.io) resource.
  # @section -- cert-manager Certificate Parameters
  enabled: false
  # -- (object) Additional labels for Certificate.
  # @section -- cert-manager Certificate Parameters
  additionalLabels:
    # key: value
  # -- (object) Annotations for Certificate.
  # @section -- cert-manager Certificate Parameters
  annotations:
    # key: value
  # -- (tpl/string) Name of the secret resource that will be automatically created and managed by this Certificate resource.
  # @section -- cert-manager Certificate Parameters
  secretName: tls-cert
  # -- (string) The requested "duration" (i.e. lifetime) of the Certificate.
  # @section -- cert-manager Certificate Parameters
  duration: 8760h0m0s # 1 year
  # -- (string) The amount of time before the currently issued certificate's notAfter time that cert-manager will begin to attempt to renew the certificate.
  # @section -- cert-manager Certificate Parameters
  renewBefore: 720h0m0s # 30d
  # -- (tpl/object) Full X509 name specification for certificate.
  # @section -- cert-manager Certificate Parameters
  subject:
  #  organizations:
  #    - stakater
  #  countries:
  #    - SE
  #  organizationalUnits:
  #    - '{{ template "application.namespace" . }}'
  #  localities:
  #    - Stockholm
  #  provinces:
  #    - Stockholm
  # -- (tpl/string) Common name as specified on the DER encoded CSR. This field is not recommended in cases when this certificate is an end-entity certificate. More information can be found in the [cert-manager documentation](https://cert-manager.io/docs/usage/certificate/#:~:text=%23%20Avoid%20using%20commonName,%3A%20example.com).
  # @section -- cert-manager Certificate Parameters
  commonName:
  # commonName: admin-app
  # -- (string) Private key algorithm of the corresponding private key for this certificate.
  # @section -- cert-manager Certificate Parameters
  keyAlgorithm: rsa
  # -- (string) Private key cryptography standards (PKCS) for this certificate's private key to be encoded in.
  # @section -- cert-manager Certificate Parameters
  keyEncoding: pkcs1
  # -- (int) Key bit size of the corresponding private key for this certificate.
  # @section -- cert-manager Certificate Parameters
  keySize: 2048
  # -- (bool) Mark this Certificate as valid for certificate signing.
  # @section -- cert-manager Certificate Parameters
  isCA: false
  # -- (list) Set of x509 usages that are requested for the certificate.
  # @section -- cert-manager Certificate Parameters
  usages:
  #  - digital signature
  #  - client auth
  # -- (tpl/list) List of DNS subjectAltNames to be set on the certificate.
  # @section -- cert-manager Certificate Parameters
  dnsNames:
  #  - admin-app
  # -- (list) List of IP address subjectAltNames to be set on the certificate.
  # @section -- cert-manager Certificate Parameters
  ipAddresses:
  #  - 192.168.0.5
  # -- (list) List of URI subjectAltNames to be set on the certificate.
  # @section -- cert-manager Certificate Parameters
  uriSANs:
  #  - spiffe://cluster.local/ns/sandbox/sa/example
  # -- (list) List of email subjectAltNames to be set on the Certificate.
  # @section -- cert-manager Certificate Parameters
  emailSANs:
  #  - foo@bar.tld
  privateKey:
    # -- (bool) Enable Private Key for the certificate.
    # @section -- cert-manager Certificate Parameters
    enabled: false
    # -- (string) Denotes how private keys should be generated or sourced when a certificate is being issued.
    # @section -- cert-manager Certificate Parameters
    rotationPolicy: Always
  issuerRef:
    # -- (string) Reference to the issuer for this certificate.
    # @section -- cert-manager Certificate Parameters
    name: ca-issuer
    # -- (string) Kind of the issuer being referred to.
    # @section -- cert-manager Certificate Parameters
    kind: ClusterIssuer
    # kind: Issuer
    # -- (string) Group of the issuer resource being refered to.
    # @section -- cert-manager Certificate Parameters
    group: cert-manager.io
  keystores:
    # -- (bool) Enables keystore configuration.
    # Keystores configures additional keystore output formats stored in the spec.secretName Secret resource.
    # @section -- cert-manager Certificate Parameters
    enabled: false
    pkcs12:
      # -- (bool) Enables PKCS12 keystore creation for the Certificate.
      # PKCS12 configures options for storing a PKCS12 keystore in the spec.secretName Secret resource.
      # @section -- cert-manager Certificate Parameters
      create: true
      # -- (string) Key of the entry in the Secret resource's data field to be used.
      # @section -- cert-manager Certificate Parameters
      key: test_key
      # -- (string) Name of the Secret resource being referred to.
      # @section -- cert-manager Certificate Parameters
      name: test-creds
    jks:
      # -- (bool) Enables jks keystore creation for the Certificate.
      # JKS configures options for storing a JKS keystore in the spec.secretName Secret resource.
      # @section -- cert-manager Certificate Parameters
      create: false
      # -- (tpl/string) Key of the entry in the Secret resource's data field to be used.
      # @section -- cert-manager Certificate Parameters
      key: test_key
      # -- (string) Name of the Secret resource being referred to.
      # @section -- cert-manager Certificate Parameters
      name: test-creds

networkPolicy:
  # -- (bool) Enable Network Policy.
  # @section -- NetworkPolicy Parameters
  enabled: false
  # -- (object) Additional labels for Network Policy.
  # @section -- NetworkPolicy Parameters
  additionalLabels:
  #   key: value
  # -- (object) Annotations for Network Policy.
  # @section -- NetworkPolicy Parameters
  annotations:
  #   key: value
  # -- (list) Ingress rules for Network Policy.
  # @section -- NetworkPolicy Parameters
  ingress:
  # - from:
  #   - ipBlock:
  #       cidr: 172.17.0.0/16
  #       except:
  #       - 172.17.1.0/24
  #   - namespaceSelector:
  #       matchLabels:
  #         project: myproject
  #   - podSelector:
  #       matchLabels:
  #         role: frontend
  #   ports:
  #   - protocol: TCP
  #     port: 6379
  # -- (list) Egress rules for Network Policy.
  # @section -- NetworkPolicy Parameters
  egress:
  #   - to:
  #     - ipBlock:
  #         cidr: 10.0.0.0/24
  #     ports:
  #     - protocol: TCP
  #       port: 5978

pdb:
  # -- (bool) Enable Pod Disruption Budget.
  # @section -- PodDisruptionBudget Parameters
  enabled: false
  # -- (int) Minimum number of pods that must be available after eviction.
  # @section -- PodDisruptionBudget Parameters
  minAvailable: 1
  # -- (int) Maximum number of unavailable pods during voluntary disruptions.
  # @section -- PodDisruptionBudget Parameters
  maxUnavailable:
  # maxUnavailable: 1

backup:
  # -- (bool) Deploy a [Velero/OADP Backup](https://velero.io/docs/main/api-types/backup/) resource.
  # @section -- Backup Parameters
  enabled: false
  # -- (string) Namespace for Backup.
  # @default -- `{{ .Release.Namespace }}`
  # @section -- Backup Parameters
  namespace:
  # -- (object) Additional labels for Backup.
  # @section -- Backup Parameters
  additionalLabels:
    # grafanaDashboard: grafana-operator
  # -- (object) Annotations for Backup.
  # @section -- Backup Parameters
  annotations:
    # key: value
  # -- (bool) Whether to use Restic to take snapshots of all pod volumes by default.
  # @section -- Backup Parameters
  defaultVolumesToRestic: true
  # -- (bool) Whether to take snapshots of persistent volumes as part of the backup.
  # @section -- Backup Parameters
  snapshotVolumes: true
  # -- (string) Name of the backup storage location where the backup should be stored.
  # @section -- Backup Parameters
  storageLocation:
  # -- (string) How long the Backup should be retained for.
  # @section -- Backup Parameters
  ttl: "1h0m0s"
  # -- (tpl/list) List of namespaces to include objects from.
  # @default -- `[ {{ include "application.namespace" $ }} ]`
  # @section -- Backup Parameters
  includedNamespaces:
  - '{{ include "application.namespace" $ }}'
  # -- (list) List of resource types to include in the backup.
  # @section -- Backup Parameters
  includedResources:
  # -- (list) List of resource types to exclude from the backup.
  # @section -- Backup Parameters
  excludedResources: